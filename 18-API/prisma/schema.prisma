// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserModel {
  id                Int @id @default(autoincrement())
  login             String 
  email             String
  password          String
  rowStatus         RowStatusModel @relation(fields: [rowStatusNumber], references: [statusNumber])
  rowStatusNumber   Int @map("row_status_number")
  userRole          UserRoleModel  @relation(fields: [userRoleNumber], references: [roleNumber])
  userRoleNumber    Int @map("user_role_number")
  promotion         PromotionModel[]
  WarehouseBalances WarehouseBalanceModel[]
  CreatedAt         DateTime @default(now()) @map("created_at")
  UpdatedAt         DateTime @default(now()) @map("updated_at")
}
 
model UserRoleModel {
  id          Int @id @default(autoincrement())
  description String 
  user        UserModel[]
  roleNumber  Int @unique @map("role_number")
  CreatedAt   DateTime @default(now()) @map("created_at")
  UpdatedAt   DateTime @default(now()) @map("updated_at")
}

model RowStatusModel {
  id                Int @id @default(autoincrement())
  description       String 
  user              UserModel[]
  item              ItemModel[]
  promotion         PromotionModel[]
  itemType          ItemTypeModel[]
  warehouseBalance  WarehouseBalanceModel[]
  statusNumber      Int @unique @map("status_number")
  CreatedAt         DateTime @default(now()) @map("created_at")
  UpdatedAt         DateTime @default(now()) @map("updated_at")
}

model ItemModel {
  id              Int @id @default(autoincrement())
  name            String
  description     String 
  price           Decimal
  itemType        ItemTypeModel @relation(fields: [itemTypeNumber], references: [itemTypeNumber])
  itemTypeNumber  Int @map("item_type_number") 
  rowStatus       RowStatusModel @relation(fields: [rowStatusNumber], references: [statusNumber])
  rowStatusNumber Int @map("row_status_number")
  itemBalance     WarehouseBalanceModel?
  CreatedAt       DateTime @default(now()) @map("created_at") 
  UpdatedAt       DateTime @default(now()) @map("updated_at") 
}

model ItemTypeModel {
  id              Int @id @default(autoincrement())
  description     String 
  item            ItemModel[]
  itemTypeNumber  Int @unique @map("item_type_number")
  rowStatus       RowStatusModel @relation(fields: [rowStatusNumber], references: [statusNumber])
  rowStatusNumber Int @map("row_status_number")
  CreatedAt       DateTime @default(now()) @map("created_at")
  UpdatedAt       DateTime @default(now()) @map("updated_at")
}

model PromotionModel {
  id              Int @id @default(autoincrement())
  name            String
  description     String 
  discoutnPercent Decimal @map("discoutn_percent")
  rowStatus       RowStatusModel @relation(fields: [rowStatusNumber], references: [statusNumber])
  rowStatusNumber Int @map("row_status_number")
  user            UserModel @relation(fields: [userId], references: [id]) 
  userId          Int @map("user_id")
  CreatedAt       DateTime @default(now()) @map("created_at") 
  UpdatedAt       DateTime @default(now()) @map("updated_at")
}

model WarehouseBalanceModel {
  id              Int @id @default(autoincrement())
  name            String
  description     String
  item            ItemModel @relation(fields: [itemId], references: [id])
  itemId          Int @unique @map("item_id") 
  rowStatus       RowStatusModel @relation(fields: [rowStatusNumber], references: [statusNumber])
  rowStatusNumber Int @map("row_status_number")
  user            UserModel @relation(fields: [userId], references: [id]) 
  userId          Int @map("user_id")
  quantity        Decimal
  CreatedAt       DateTime @default(now()) @map("created_at") 
  UpdatedAt       DateTime @default(now()) @map("updated_at") 
}

